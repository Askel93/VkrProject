version: '3.1'
services:

  monitoring:
    build: hystrix
    container_name: monitoring
    image: mitinikitos/vkr-monitoring:latest
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    ports:
      - "8080:8080"
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    depends_on:
      config:
        condition: service_healthy
    networks:
      - "net"

  activemq:
    image: rmohr/activemq:5.15.9-alpine
    ports:
      - "61616:61616"
      # - "8161:8161"
    volumes: ["activemq-data:/opt/activemq/conf", "activemq-data:/data/activemq", "activemq-data:/var/log/activemq"]
    environment:
      ACTIVEMQ_REMOVE_DEFAULT_ACCOUNT: "true"
      ACTIVEMQ_ADMIN_LOGIN: nikita
      ACTIVEMQ_ADMIN_PASSWORD: $MQ_PASSWORD
      ACTIVEMQ_ENABLED_SCHEDULER: "true"
      ACTIVEMQ_MIN_MEMORY: 512
      ACTIVEMQ_MAX_MEMORY: 2048
    networks:
      - "net"

  config:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    build: config
    container_name: config
    image: mitinikitos/vkr-config:latest
    restart: always
    ports:
      - "8888:8888"
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    networks:
      - "net"

  registry:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    build: registry
    image: mitinikitos/vkr-registry:latest
    container_name: registry
    restart: always
    depends_on:
      config:
        condition: service_healthy
    ports:
      - "8761:8761"
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    networks:
      - "net"

  gateway:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    build: ./gateway
    image: mitinikitos/vkr-gateway:latest
    container_name: gateway
    restart: always
    depends_on:
      config:
        condition: service_healthy
    ports:
      - "4000:4000"
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    networks:
      - "net"

  auth-service:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      ACCOUNT_SERVICE_PASSWORD: $ACCOUNT_SERVICE_PASSWORD
      SHIP_SERVICE_PASSWORD: $SHIP_SERVICE_PASSWORD
      EXCEL_SERVICE_PASSWORD: $EXCEL_SERVICE_PASSWORD
      DB: $DB
      SIGNING_KEY: $SIGNING_KEY
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    build: auth-service
    image: mitinikitos/vkr-auth:latest
    container_name: auth-service
    restart: always
    depends_on:
      config:
        condition: service_healthy
    ports:
      - "5000:5000"
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    networks:
      - "net"

  auth-db:
    image: postgres:13-alpine
    container_name: auth-db
    environment:
      POSTGRES_USER: nikita
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $DB
    ports:
      - "5432:5432"
    volumes:
      - ./.auth-db:/var/lib/postgresql/data
    networks:
      - "net"

  account-service:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      DB: $DB
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      ACCOUNT_SERVICE_PASSWORD: $ACCOUNT_SERVICE_PASSWORD
    build: account-service
    image: mitinikitos/vkr-account:latest
    container_name: account-service
    restart: always
    depends_on:
      config:
        condition: service_healthy
    ports:
      - "6000:6000"
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    networks:
      - "net"

  account-db:
    image: postgres:13-alpine
    container_name: account-db
    environment:
      POSTGRES_USER: nikita
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $DB
    ports:
      - "6432:5432"
    volumes:
      - ./.account-db:/var/lib/postgresql/data
    networks:
      - "net"

  ship-service:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      MQ_PASSWORD: $MQ_PASSWORD
      DB: $DB
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      SHIP_SERVICE_PASSWORD: $SHIP_SERVICE_PASSWORD
    build: ship-service
    image: mitinikitos/vkr-ship:latest
    container_name: ship-service
    restart: always
    depends_on:
      config:
        condition: service_healthy
    ports:
      - "7000:7000"
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    networks:
      - "net"

  ship-db:
    image: postgres:13-alpine
    container_name: ship-db
    environment:
      POSTGRES_USER: nikita
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $DB
    ports:
      - "7432:5432"
    volumes:
      - ./.ship-db:/var/lib/postgresql/data
    networks:
      - "net"

  excel-service:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      MQ_PASSWORD: $MQ_PASSWORD
      EXCEL_SERVICE_PASSWORD: $EXCEL_SERVICE_PASSWORD
    build: excel-service
    image: mitinikitos/vkr-excel:latest
    container_name: excel-service
    restart: always
    depends_on:
      config:
        condition: service_healthy
    ports:
      - "8000:8000"
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    networks:
      - "net"
  
  frontend:
    build:
      context: frontend
      target: prod
    image: mitinikitos/vkr-frontend:latest
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - './frontend:/app'
      - '/app/node_modules'
    networks:
      - "net"
      
  nginx:
    build:
      context: nginx
      target: prod
    image: mitinikitos/vkr-nginx:latest
    container_name: nginx
    volumes:
      - "dhparam:/etc/nginx/dhparam"
      - "vhost:/etc/nginx/vhost.d"
      - "certs:/etc/nginx/certs"
      - "/run/docker.sock:/tmp/docker.sock:ro"
    ports:
      - "80:80"
      - "443:443"
    links:
      - frontend
      - gateway
    networks:
      - "net"

volumes:
  activemq-data: {}
  certs:
  vhost:
  dhparam:


networks:
  net:
    external: true