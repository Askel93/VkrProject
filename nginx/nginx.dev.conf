events {}

http {
	map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

	upstream frontend_server {
		server frontend:3000;
	}

	upstream chat_server {
		server backend:8080;
	}

	upstream auth_server {
		server authservice:8081;
	}

	server {

		listen 443 ssl;
        ssl_certificate /etc/nginx/conf.d/cert.pem;
        ssl_certificate_key /etc/nginx/conf.d/key.pem;

  		location / {
    		proxy_pass http://frontend_server;
    		proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            add_header 'Access-Control-Allow-Origin' '*';
  		}

  		location /api/ {
      		proxy_pass http://chat_server;
	      	proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            
            # For WebSocket upgrade header
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
	  	}
  
  		location /auth/ {
  	  		proxy_pass http://auth_server;
	      	proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
  		}
  		
  		location /sockjs-node/ {
            proxy_pass http://frontend_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
	}
}
